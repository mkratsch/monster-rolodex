{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchTerm","target","value","state","a","fetch","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2VAEaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,eAAeC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAC3B,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHjBC,EAAW,SAACR,GACxB,OACC,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAI,SAACN,GAAD,OACnB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLVM,G,YAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACxC,OACC,uBACCZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCqCEG,E,kDAxCd,aAAe,IAAD,8BACb,gBAiBDH,aAAe,SAACI,GACf,EAAKC,SAAS,CAAEC,WAAYF,EAAEG,OAAOC,SAjBrC,EAAKC,MAAQ,CACZH,WAAY,GACZV,SAAU,CACT,CAAEJ,GAAI,MAAOC,KAAM,gBACnB,CAAED,GAAI,MAAOC,KAAM,WACnB,CAAED,GAAI,MAAOC,KAAM,YAPR,E,4FAYd,8BAAAiB,EAAA,sEACwBC,MAAM,8CAD9B,cACOC,EADP,gBAEqBA,EAASC,OAF9B,OAEOC,EAFP,OAGCC,KAAKV,SAAS,CAAET,SAAUkB,IAH3B,gD,0EAUA,WAAU,IAAD,EACyBC,KAAKN,MAA9Bb,EADA,EACAA,SAAUU,EADV,EACUA,WACZU,EAAmBpB,EAASqB,QAAO,SAAC1B,GAAD,OACxCA,EAAQE,KAAKyB,cAAcC,SAASb,EAAWY,kBAEhD,OACC,sBAAK9B,UAAU,MAAf,UACC,iDACA,cAAC,EAAD,CACCW,YAAY,kBACZC,aAAce,KAAKf,eAGpB,cAAC,EAAD,CAAUJ,SAAUoB,W,GApCNI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c9701587.chunk.js","sourcesContent":["import React from \"react\";\nimport './card.styles.css'\nexport const Card = (props) => {\n    return (\n        <div className='card-container'>\n            <img alt=\"monsterimage\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n            <h2>{props.monster.name}</h2>\n            <p>{props.monster.email}</p>\n        </div>\n        \n    );\n}","import React from 'react';\nimport './card-list.styles.css';\nimport { Card } from '../card/card.component';\n\nexport const CardList = (props) => {\n\treturn (\n\t\t<div className='card-list'>\n\t\t\t{props.monsters.map((monster) => (\n\t\t\t\t<Card key={monster.id} monster={monster} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n\treturn (\n\t\t<input\n\t\t\tclassName='search'\n\t\t\ttype='search'\n\t\t\tplaceholder={placeholder}\n\t\t\tonChange={handleChange}\n\t\t/>\n\t);\n};\n","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tsearchTerm: '',\n\t\t\tmonsters: [\n\t\t\t\t{ id: 'asd', name: 'Frankenstein' },\n\t\t\t\t{ id: 'jkv', name: 'Dracula' },\n\t\t\t\t{ id: 'uie', name: 'Zombie' },\n\t\t\t],\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tconst response = await fetch('https://jsonplaceholder.typicode.com/users');\n\t\tconst users = await response.json();\n\t\tthis.setState({ monsters: users });\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({ searchTerm: e.target.value });\n\t};\n\n\trender() {\n\t\tconst { monsters, searchTerm } = this.state;\n\t\tconst filteredMonsters = monsters.filter((monster) =>\n\t\t\tmonster.name.toLowerCase().includes(searchTerm.toLowerCase())\n\t\t);\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<h1>Monster Rolodex</h1>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder='search monsters'\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t/>\n\n\t\t\t\t<CardList monsters={filteredMonsters}></CardList>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}